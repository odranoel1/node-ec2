# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.8-alpine
pipelines:
  branches:
    develop:
      - step:
          name: Update docker image
          services:
            - docker
          cache:
            - docker
          image: amazon/aws-cli
          script:
            - echo "Define environment"
            - export STAGE=development
            - export TAG=latest
            - echo "Build docker image"
            - sh ./deploy/build_docker_image.sh
      - step:
          name: Deploy to AWS Fargate
          caches:
            -pip
          script:
            - echo "Install tools"
            - pip3 install boto3
            - pip3 install -U awscli
            - echo "Update AWS ECS"
            - python ./deploy/update_ecs.py $APP_NAME-cluster-$STAGE $APP_NAME-service-$STAGE 1
    master:
      - step:
          name: Build docker image to ECR
          services:
            - docker
          image: amazon/aws-cli
          script:
            - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
            - docker build -t $ECR_REPO_NAME .
            - docker tag $ECR_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:latest
            - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:latest
            - IMGS_TO_DEL=$(aws ecr --region $AWS_DEFAULT_REGION list-images --repository-name $ECR_REPO_NAME --filter "tagStatus=UNTAGGED" --query 'imageIds[*]' --output json)
            - echo $IMGS_TO_DEL
            - aws ecr --region $AWS_DEFAULT_REGION batch-delete-image --repository-name $ECR_REPO_NAME --image-ids "$IMGS_TO_DEL" || true
      - step:
          name: Run task in Cluster
          services:
            - docker
          script:
            - pipe: atlassian/aws-ecs-deploy:1.1.2
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                CLUSTER_NAME: $AWS_CLUSTER_NAME
                SERVICE_NAME: $AWS_SERVICE_NAME
                TASK_DEFINITION: $AWS_TASK_DEF
                DEBUG: "true"